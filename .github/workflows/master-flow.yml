name: Android Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  unit_tests:
#    name: Android Unit Testing
#    runs-on: ubuntu-latest
#    steps:
#      ## Checkout our repository ###
#      - uses: actions/checkout@v2.4.0
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#
#      ## Set up our JDK environment
#      - uses: actions/setup-java@v2.3.1
#        with:
#          java-version: 11
#          distribution: 'adopt'
#
#      #      ## Setup Gradle
#      #      - name: Gradle
#      #        uses: gradle/gradle-build-action@v2
#      #        with:
#      #          gradle-version: current
#      #          wrapper-cache-enabled: true
#      #          dependencies-cache-enabled: true
#      #          configuration-cache-enabled: true
#
#      - uses: actions/cache@v2.1.6
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - run: chmod +x ./gradlew
#
##      ## Build Application
##      - name: Build Application
##        run: ./gradlew assembleDebug
#
#      ## Lint Checking
#      - name: Lint Checking
#        run: ./gradlew lint
#
#      ## Unit Testing
#      - name: Unit Testing
#        run: ./gradlew jacocoTestReport
#
#      ## Sonar Cloud Caching
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v2.1.6
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#
#      - name: SonarCloud Analysis
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew sonarqube --info
#
#      - name: Uploading Unit test reports
#        uses: actions/upload-artifact@v2
#        with:
#          name: unit-test-report
#          path: |
#            ./**/build/reports/
#            ./**/build/test-results/
#
#  ui_testing:
#    name: Android Instrumentation Testing
#    runs-on: macos-latest
#    needs: [ unit_tests ]
#    steps:
#      ## Checkout our repository ###
#      - uses: actions/checkout@v2.4.0
#
#      ## Set up our JDK environment
#      - uses: actions/setup-java@v2.3.1
#        with:
#          java-version: 11
#          distribution: 'adopt'
#
#      #      ## Setup Gradle
#      #      - name: Gradle
#      #        uses: gradle/gradle-build-action@v2
#      #        with:
#      #          gradle-version: current
#      #          wrapper-cache-enabled: true
#      #          dependencies-cache-enabled: true
#      #          configuration-cache-enabled: true
#
#      - uses: actions/cache@v2.1.6
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - run: chmod +x ./gradlew
#
#      ## Instrumentation Testing
#      - name: Instrumentation Testing
#        uses: ReactiveCircus/android-emulator-runner@v2.21.0
#        with:
#          api-level: 29
#          target: default
#          arch: x86
#          profile: Nexus 6
#          disable-animations: true
#          script: ./gradlew jacocoUITestReport
#
#      - name: Uploading UI test reports
#        uses: actions/upload-artifact@v2
#        with:
#          name: ui-test-report
#          path: |
#            ./**/build/reports/
  upload_to_firebase:
    name: Upload APK to Testers
    runs-on: ubuntu-latest
    steps:
      ## Checkout our repository ###
      - uses: actions/checkout@v2.4.0

      ## Set up our JDK environment
      - uses: actions/setup-java@v2.3.1
        with:
          java-version: 11
          distribution: 'adopt'

      #      ## Setup Gradle
      #      - name: Gradle
      #        uses: gradle/gradle-build-action@v2
      #        with:
      #          gradle-version: current
      #          wrapper-cache-enabled: true
      #          dependencies-cache-enabled: true
      #          configuration-cache-enabled: true

      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - run: chmod +x ./gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: '1:1096149954436:android:3079a26aa92c5d9fcbb7d1'
          token: '1//0g1jRUJmwrJwiCgYIARAAGBASNwF-L9IrEjAPFMe3vK_5ybP47yhWbbsKcvxlVVigHpt0ouZ5wq9vnjXGHns1pWy73OlCqQf9ak4'
          groups: ga-app-testers
          file: app/build/outputs/apk/debug/app-debug.apk

      - name: Uploading Debug APK
        uses: actions/upload-artifact@v2
        with:
          name: debug-apk
          path: |
            ./**/build/outputs/apk/debug/app-debug.apk